class SettingsController < ApplicationController
  def index
    @max_booking            = Setting.getSetting('max_booking', 'integer')
    @min_day_cancel_booking = Setting.getSetting('min_day_cancel_booking', 'integer')

    respond_to do |format|
      format.html # index.html.erb
      format.xml  { render :xml => @settings }
    end
  end

  def update_setting
    begin
      # Check if all input fields are given
      if params[:max_booking].blank?
        raise 'Please enter a number for maximum number of booking per week'
      end
      if params[:min_day_cancel_booking].blank?
        raise 'Please enter a number for minimum day to cancel booking'
      end
      
      # Parsing data
      # Exception will be generated by the parse function
      max_booking = params[:max_booking].to_i
      min_day_cancel_booking = params[:min_day_cancel_booking].to_i
      
      # Check if the dates are in valid range
      if max_booking <= 0
        raise 'Number of booking per week must be greater than 0.'
      end
      if min_day_cancel_booking < 0 
        raise 'Minimum number of day to cancel booking must not be negative.'
      end
      
      # Save the date
      if not Setting.setSetting('max_booking', 'integer', max_booking)
        raise 'Unable to save the data.'
      end
      if not Setting.setSetting('min_day_cancel_booking', 'integer', min_day_cancel_booking)
        raise 'Unable to save the data'
      end

      redirect_to :action => 'index', :notice => 'All settings have successfully updated.'

    rescue Exception => e
      redirect_to :action => 'index', :error => e.message
    end
  end
end
